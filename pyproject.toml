[project]
name = "python_try"
version = "0.0.1"
description = "This is a template repository for Python projects that use Poetry for their dependency management."
authors = [{"name" = "Volker Kuehn", "email" = "vkuehn@more-machines.org"}] # Correct string format
repository = "https://github.com/vkuehn/python-try"
documentation = "https://vkuehn.github.io/python-try/"
readme = "README.md"
packages = [{ include = "python_try" }]
requires-python = ">=3.12"
dependencies = [
    "ruff >= 0.9.7",
    "pre-commit (>=4.1.0,<5.0.0)",
    "mypy (>=1.15.0,<2.0.0)"
]

[build-system]
requires = ["poetry-core>=1.0.0"] #  Consider "^1.5.0" or latest
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
pytest = "^8.3.2"
pytest-cov = "^5.0.0"
mypy = "^1.11.1"
pre-commit = "^4.1.0"
tox = "^4.16.0"
mkdocs = "^1.6.0"
mkdocs-material = "^9.5.30"
mkdocstrings = { extras = ["python"], version = "^0.25.2" }

[tool.mypy]
files = ["python_try"]
disallow_untyped_defs = true  # Use lowercase true/false for consistency
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py37"  # Consider updating to a more recent version like "py311"
line-length = 120
fix = true
lint.select = [
    "YTT",  # flake8-2020
    "S",    # flake8-bandit
    "B",    # flake8-bugbear
    "A",    # flake8-builtins
    "C4",   # flake8-comprehensions
    "T10",  # flake8-debugger
    "SIM",  # flake8-simplify
    "I",    # isort
    "C90",  # mccabe
    "E", "W", # pycodestyle
    "F",    # pyflakes
    "PGH",  # pygrep-hooks
    "UP",   # pyupgrade
    "RUF",  # ruff
    "TRY",  # tryceratops
]
lint.ignore = [
    "E501",  # LineTooLong
    "E731",  # DoNotAssignLambda
]

[tool.ruff.format]
preview = true

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["python_try"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]
